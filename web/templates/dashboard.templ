package templates

import (
	"deployer/internal/models"
	"strconv"
)

templ Dashboard(user *models.User, projects []models.Project) {
	@Base("Dashboard - GoTH Deployer") {
		<div class="flex min-h-screen relative z-10">
			<!-- Sidebar -->
			<div class="w-64 fixed h-full bg-gradient-to-b from-dark-800/50 to-dark-900/50 glass border-r border-white/10 animate-slide-in">
				<!-- Logo -->
				<div class="p-6 border-b border-white/10">
					<div class="flex items-center space-x-3">
						<div class="w-10 h-10 bg-gradient-to-r from-neon-blue to-neon-purple rounded-xl flex items-center justify-center animate-pulse-neon">
							<i class="fas fa-rocket text-white text-lg"></i>
						</div>
						<div>
							<h1 class="text-xl font-bold bg-gradient-to-r from-neon-blue to-neon-purple bg-clip-text text-transparent">GoTH</h1>
							<p class="text-xs text-gray-400">Deployer</p>
						</div>
					</div>
				</div>

				<!-- Navigation -->
				<nav class="p-4 space-y-2">
					<a href="/dashboard" class="flex items-center space-x-3 p-3 rounded-xl bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 text-white border border-neon-blue/30 group">
						<i class="fas fa-chart-pie w-5 text-neon-blue group-hover:scale-110 transition-transform"></i>
						<span class="font-medium">Dashboard</span>
					</a>
					<a href="/projects" class="flex items-center space-x-3 p-3 rounded-xl hover:bg-white/5 text-gray-300 hover:text-white transition-all group">
						<i class="fas fa-folder w-5 group-hover:scale-110 transition-transform"></i>
						<span>Projects</span>
					</a>
					<a href="#" class="flex items-center space-x-3 p-3 rounded-xl hover:bg-white/5 text-gray-300 hover:text-white transition-all group">
						<i class="fas fa-cloud w-5 group-hover:scale-110 transition-transform"></i>
						<span>Deployments</span>
					</a>
					<a href="#" class="flex items-center space-x-3 p-3 rounded-xl hover:bg-white/5 text-gray-300 hover:text-white transition-all group">
						<i class="fas fa-chart-line w-5 group-hover:scale-110 transition-transform"></i>
						<span>Analytics</span>
					</a>
					<a href="#" class="flex items-center space-x-3 p-3 rounded-xl hover:bg-white/5 text-gray-300 hover:text-white transition-all group">
						<i class="fas fa-cog w-5 group-hover:scale-110 transition-transform"></i>
						<span>Settings</span>
					</a>
				</nav>

				<!-- User Profile -->
				<div class="absolute bottom-6 left-4 right-4">
					<div class="glass rounded-xl p-4">
						<div class="flex items-center space-x-3">
							<img src={ user.AvatarURL } alt="Avatar" class="w-10 h-10 rounded-xl border-2 border-neon-blue/50"/>
							<div class="flex-1 min-w-0">
								<p class="text-white font-medium truncate">{ user.Username }</p>
								<p class="text-gray-400 text-sm truncate">Developer</p>
							</div>
							<i class="fas fa-chevron-up text-gray-400 hover:text-white cursor-pointer"></i>
						</div>
					</div>
				</div>
			</div>

			<!-- Main Content -->
			<div class="flex-1 ml-64">
				<!-- Top Bar -->
				<div class="glass border-b border-white/10 p-6">
					<div class="flex justify-between items-center">
						<div>
							<h2 class="text-2xl font-bold text-white">Dashboard</h2>
							<p class="text-gray-400 mt-1">Welcome back, { user.Username }! Here's what's happening.</p>
						</div>
						<button 
							hx-get="/projects" 
							hx-target="#project-modal-content"
							hx-trigger="click"
							class="gradient-border rounded-xl px-6 py-3 bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 text-white font-semibold hover:from-neon-blue/30 hover:to-neon-purple/30 transition-all duration-300 flex items-center space-x-2 animate-pulse-neon"
							onclick="document.getElementById('project-modal').classList.remove('hidden')"
						>
							<i class="fas fa-plus"></i>
							<span>New Project</span>
						</button>
					</div>
				</div>

				<!-- Stats Cards -->
				<div class="p-6">
					<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
						<!-- Total Projects -->
						<div class="glass rounded-xl p-6 hover:bg-white/10 transition-all duration-300 animate-fade-in">
							<div class="flex items-center justify-between">
								<div>
									<p class="text-gray-400 text-sm">Total Projects</p>
									<p class="text-3xl font-bold text-white mt-1">{ strconv.Itoa(len(projects)) }</p>
								</div>
								<div class="w-12 h-12 bg-gradient-to-r from-neon-blue to-neon-purple rounded-xl flex items-center justify-center">
									<i class="fas fa-folder text-white"></i>
								</div>
							</div>
							<div class="mt-4 flex items-center">
								<i class="fas fa-arrow-up text-neon-green text-sm"></i>
								<span class="text-neon-green text-sm ml-1">+12%</span>
								<span class="text-gray-400 text-sm ml-2">vs last month</span>
							</div>
						</div>

						<!-- Active Deployments -->
						<div class="glass rounded-xl p-6 hover:bg-white/10 transition-all duration-300 animate-fade-in" style="animation-delay: 0.1s">
							<div class="flex items-center justify-between">
								<div>
									<p class="text-gray-400 text-sm">Active</p>
									<p class="text-3xl font-bold text-white mt-1">{ strconv.Itoa(countActiveProjects(projects)) }</p>
								</div>
								<div class="w-12 h-12 bg-gradient-to-r from-neon-green to-neon-blue rounded-xl flex items-center justify-center">
									<i class="fas fa-play text-white"></i>
								</div>
							</div>
							<div class="mt-4 flex items-center">
								<i class="fas fa-arrow-up text-neon-green text-sm"></i>
								<span class="text-neon-green text-sm ml-1">+8%</span>
								<span class="text-gray-400 text-sm ml-2">vs last week</span>
							</div>
						</div>

						<!-- Deployments Today -->
						<div class="glass rounded-xl p-6 hover:bg-white/10 transition-all duration-300 animate-fade-in" style="animation-delay: 0.2s">
							<div class="flex items-center justify-between">
								<div>
									<p class="text-gray-400 text-sm">Deployed Today</p>
									<p class="text-3xl font-bold text-white mt-1">7</p>
								</div>
								<div class="w-12 h-12 bg-gradient-to-r from-neon-purple to-neon-pink rounded-xl flex items-center justify-center">
									<i class="fas fa-rocket text-white"></i>
								</div>
							</div>
							<div class="mt-4 flex items-center">
								<i class="fas fa-arrow-up text-neon-green text-sm"></i>
								<span class="text-neon-green text-sm ml-1">+23%</span>
								<span class="text-gray-400 text-sm ml-2">vs yesterday</span>
							</div>
						</div>

						<!-- Success Rate -->
						<div class="glass rounded-xl p-6 hover:bg-white/10 transition-all duration-300 animate-fade-in" style="animation-delay: 0.3s">
							<div class="flex items-center justify-between">
								<div>
									<p class="text-gray-400 text-sm">Success Rate</p>
									<p class="text-3xl font-bold text-white mt-1">98.5%</p>
								</div>
								<div class="w-12 h-12 bg-gradient-to-r from-neon-yellow to-neon-green rounded-xl flex items-center justify-center">
									<i class="fas fa-check text-white"></i>
								</div>
							</div>
							<div class="mt-4 flex items-center">
								<i class="fas fa-arrow-up text-neon-green text-sm"></i>
								<span class="text-neon-green text-sm ml-1">+0.2%</span>
								<span class="text-gray-400 text-sm ml-2">vs last week</span>
							</div>
						</div>
					</div>

					<!-- Projects Section -->
					<div class="flex justify-between items-center mb-6">
						<div>
							<h3 class="text-xl font-bold text-white">Your Projects</h3>
							<p class="text-gray-400">Manage and deploy your applications</p>
						</div>
						<div class="flex items-center space-x-2">
							<button class="glass rounded-lg px-4 py-2 text-gray-300 hover:text-white transition-colors">
								<i class="fas fa-th-large"></i>
							</button>
							<button class="glass rounded-lg px-4 py-2 text-gray-300 hover:text-white transition-colors">
								<i class="fas fa-list"></i>
							</button>
						</div>
					</div>

					<!-- Projects Grid -->
					<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="projects-grid">
						if len(projects) == 0 {
							<div class="col-span-full">
								@EmptyState()
							</div>
						} else {
							for i, project := range projects {
								@ProjectCard(project, i)
							}
						}
					</div>
				</div>
			</div>

			<!-- Project Modal -->
			<div id="project-modal" class="fixed inset-0 bg-black/70 backdrop-blur-sm hidden z-50 flex items-center justify-center">
				<div class="glass rounded-2xl max-w-2xl w-full mx-4 max-h-[80vh] overflow-y-auto border border-white/20">
					<div class="p-8">
						<div class="flex justify-between items-center mb-6">
							<div>
								<h2 class="text-2xl font-bold text-white">Create New Project</h2>
								<p class="text-gray-400 mt-1">Deploy your GoTH stack application</p>
							</div>
							<button onclick="document.getElementById('project-modal').classList.add('hidden')" class="text-gray-400 hover:text-white transition-colors">
								<i class="fas fa-times text-xl"></i>
							</button>
						</div>
						<div id="project-modal-content">
							<!-- Content loaded via HTMX -->
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- HTMX Event Handlers -->
		<script>
			document.body.addEventListener('projectCreated', function(evt) {
				document.getElementById('project-modal').classList.add('hidden');
				location.reload();
			});
			
			// Add some dynamic interactions
			document.addEventListener('DOMContentLoaded', function() {
				// Animate stats on load
				const statCards = document.querySelectorAll('[class*="animate-fade-in"]');
				statCards.forEach((card, index) => {
					setTimeout(() => {
						card.style.opacity = '1';
						card.style.transform = 'translateY(0)';
					}, index * 100);
				});
			});
		</script>
	}
}

templ ProjectCard(project models.Project, index int) {
	<div class="glass rounded-xl p-6 hover:bg-white/10 transition-all duration-300 animate-fade-in group" style={ "animation-delay: " + strconv.Itoa(index*100) + "ms" }>
		<div class="flex justify-between items-start mb-4">
			<div class="flex items-center space-x-3">
				<div class="w-12 h-12 bg-gradient-to-r from-neon-blue to-neon-purple rounded-xl flex items-center justify-center">
					<i class="fas fa-code text-white"></i>
				</div>
				<div>
					<h3 class="text-lg font-semibold text-white group-hover:text-neon-blue transition-colors">{ project.Name }</h3>
					<p class="text-gray-400 text-sm">{ project.Branch }</p>
				</div>
			</div>
			<div class={ "px-3 py-1 rounded-full text-xs font-medium border", statusColorNew(project.Status) }>
				<i class={ statusIcon(project.Status) + " mr-1" }></i>
				{ project.Status }
			</div>
		</div>
		
		<div class="space-y-3 mb-4">
			<div class="flex items-center text-sm text-gray-300">
				<i class="fab fa-github w-4 mr-2 text-gray-400"></i>
				<span class="truncate">{ project.Repository }</span>
			</div>
			<div class="flex items-center text-sm text-gray-300">
				<i class="fas fa-link w-4 mr-2 text-gray-400"></i>
				<span class="truncate">{ project.Subdomain }.localhost:8080</span>
				<button class="ml-2 text-neon-blue hover:text-neon-purple transition-colors" onclick="navigator.clipboard.writeText('http://{ project.Subdomain }.localhost:8080')">
					<i class="fas fa-copy text-xs"></i>
				</button>
			</div>
		</div>

		<div class="flex space-x-2">
			<a href={ templ.SafeURL("/projects/" + templ.EscapeString(strconv.Itoa(project.ID))) } class="flex-1 glass rounded-lg px-4 py-2 text-center text-sm font-medium text-neon-blue hover:bg-neon-blue/20 transition-all border border-neon-blue/30">
				<i class="fas fa-eye mr-1"></i>
				Details
			</a>
			<button 
				hx-post={ "/projects/" + strconv.Itoa(project.ID) + "/deploy" }
				hx-trigger="click"
				class="flex-1 bg-gradient-to-r from-neon-green/20 to-neon-blue/20 rounded-lg px-4 py-2 text-sm font-medium text-white hover:from-neon-green/30 hover:to-neon-blue/30 transition-all border border-neon-green/30"
			>
				<i class="fas fa-rocket mr-1"></i>
				Deploy
			</button>
		</div>
		
		<!-- Deployment progress bar (if building) -->
		if project.Status == "building" {
			<div class="mt-4">
				<div class="h-1 bg-dark-700 rounded-full overflow-hidden">
					<div class="h-full bg-gradient-to-r from-neon-blue to-neon-purple animate-pulse w-3/4 transition-all duration-500"></div>
				</div>
				<p class="text-xs text-gray-400 mt-1">Building and deploying...</p>
			</div>
		}
	</div>
}

templ EmptyState() {
	<div class="col-span-full glass rounded-xl p-12 text-center">
		<div class="w-24 h-24 bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 rounded-full flex items-center justify-center mx-auto mb-6 animate-float">
			<i class="fas fa-rocket text-4xl text-neon-blue"></i>
		</div>
		<h3 class="text-xl font-semibold text-white mb-2">No projects yet</h3>
		<p class="text-gray-400 mb-6 max-w-md mx-auto">Create your first project to get started with deployments. Connect your GitHub repository and deploy in minutes!</p>
		<button 
			hx-get="/projects" 
			hx-target="#project-modal-content"
			hx-trigger="click"
			class="gradient-border rounded-xl px-8 py-3 bg-gradient-to-r from-neon-blue/20 to-neon-purple/20 text-white font-semibold hover:from-neon-blue/30 hover:to-neon-purple/30 transition-all duration-300"
			onclick="document.getElementById('project-modal').classList.remove('hidden')"
		>
			<i class="fas fa-plus mr-2"></i>
			Create Your First Project
		</button>
	</div>
}

func statusColorNew(status string) string {
	switch status {
	case "active":
		return "bg-neon-green/20 text-neon-green border-neon-green/30"
	case "building":
		return "bg-neon-yellow/20 text-neon-yellow border-neon-yellow/30"
	case "failed":
		return "bg-neon-pink/20 text-neon-pink border-neon-pink/30"
	default:
		return "bg-gray-600/20 text-gray-400 border-gray-600/30"
	}
}

func statusIcon(status string) string {
	switch status {
	case "active":
		return "fas fa-check-circle"
	case "building":
		return "fas fa-spinner fa-spin"
	case "failed":
		return "fas fa-exclamation-circle"
	default:
		return "fas fa-circle"
	}
}

func countActiveProjects(projects []models.Project) int {
	count := 0
	for _, project := range projects {
		if project.Status == "active" {
			count++
		}
	}
	return count
} 