package templates

import (
	"deployer/internal/models"
	"strconv"
)

templ Dashboard(user *models.User, projects []models.Project) {
	@Base("Dashboard - GoTH Deployer") {
		<div class="min-h-screen bg-gray-50">
			<!-- Navigation -->
			<nav class="bg-white shadow-sm">
				<div class="max-w-7xl mx-auto px-6 py-4">
					<div class="flex justify-between items-center">
						<div class="flex items-center space-x-2">
							<div class="w-8 h-8 bg-gradient-to-r from-blue-500 to-indigo-600 rounded-lg"></div>
							<span class="text-xl font-bold text-gray-900">GoTH Deployer</span>
						</div>
						<div class="flex items-center space-x-4">
							<img src={ user.AvatarURL } alt="Avatar" class="w-8 h-8 rounded-full"/>
							<span class="text-gray-700 font-medium">{ user.Username }</span>
						</div>
					</div>
				</div>
			</nav>

			<!-- Main Content -->
			<div class="max-w-7xl mx-auto px-6 py-8">
				<!-- Header -->
				<div class="flex justify-between items-center mb-8">
					<div>
						<h1 class="text-3xl font-bold text-gray-900">Your Projects</h1>
						<p class="text-gray-600 mt-2">Manage and deploy your GoTH stack applications</p>
					</div>
					<button 
						hx-get="/projects" 
						hx-target="#project-modal-content"
						hx-trigger="click"
						class="bg-gradient-to-r from-blue-500 to-indigo-600 text-white px-6 py-3 rounded-lg font-semibold hover:from-blue-600 hover:to-indigo-700 transition-all duration-200 shadow-lg hover:shadow-xl flex items-center space-x-2"
						onclick="document.getElementById('project-modal').classList.remove('hidden')"
					>
						<svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
						</svg>
						<span>New Project</span>
					</button>
				</div>

				<!-- Projects Grid -->
				<div class="grid md:grid-cols-2 lg:grid-cols-3 gap-6" id="projects-grid">
					if len(projects) == 0 {
						<div class="col-span-full text-center py-12">
							<div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4">
								<svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
								</svg>
							</div>
							<h3 class="text-lg font-medium text-gray-900 mb-2">No projects yet</h3>
							<p class="text-gray-600">Create your first project to get started with deployments</p>
						</div>
					} else {
						for _, project := range projects {
							@ProjectCard(project)
						}
					}
				</div>
			</div>

			<!-- Project Modal -->
			<div id="project-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
				<div class="flex items-center justify-center min-h-screen p-4">
					<div class="bg-white rounded-lg max-w-2xl w-full max-h-[80vh] overflow-y-auto">
						<div class="p-6">
							<div class="flex justify-between items-center mb-4">
								<h2 class="text-xl font-bold text-gray-900">Create New Project</h2>
								<button onclick="document.getElementById('project-modal').classList.add('hidden')" class="text-gray-400 hover:text-gray-600">
									<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
									</svg>
								</button>
							</div>
							<div id="project-modal-content">
								<!-- Content loaded via HTMX -->
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>

		<!-- HTMX Event Handlers -->
		<script>
			document.body.addEventListener('projectCreated', function(evt) {
				document.getElementById('project-modal').classList.add('hidden');
				location.reload(); // Refresh to show new project
			});
		</script>
	}
}

templ ProjectCard(project models.Project) {
	<div class="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow">
		<div class="flex justify-between items-start mb-4">
			<h3 class="text-lg font-semibold text-gray-900">{ project.Name }</h3>
			<div class={ "px-2 py-1 rounded-full text-xs font-medium", statusColor(project.Status) }>
				{ project.Status }
			</div>
		</div>
		
		<div class="space-y-2 mb-4">
			<div class="flex items-center text-sm text-gray-600">
				<svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 20 20">
					<path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"></path>
				</svg>
				{ project.Branch }
			</div>
			<div class="flex items-center text-sm text-gray-600">
				<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
					<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"></path>
				</svg>
				{ project.Subdomain }.localhost:8080
			</div>
		</div>

		<div class="flex space-x-2">
			<a href={ templ.SafeURL("/projects/" + templ.EscapeString(strconv.Itoa(project.ID))) } class="flex-1 bg-blue-50 text-blue-600 px-4 py-2 rounded-lg text-center text-sm font-medium hover:bg-blue-100 transition-colors">
				View Details
			</a>
			<button 
				hx-post={ "/projects/" + strconv.Itoa(project.ID) + "/deploy" }
				hx-trigger="click"
				class="flex-1 bg-green-50 text-green-600 px-4 py-2 rounded-lg text-sm font-medium hover:bg-green-100 transition-colors"
			>
				Deploy
			</button>
		</div>
	</div>
}

func statusColor(status string) string {
	switch status {
	case "active":
		return "bg-green-100 text-green-800"
	case "building":
		return "bg-yellow-100 text-yellow-800"
	case "failed":
		return "bg-red-100 text-red-800"
	default:
		return "bg-gray-100 text-gray-800"
	}
} 